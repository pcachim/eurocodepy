{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Home This site contains the project documentation for the calculator project that is a toy module used in the Real Python tutorial Build Your Python Project Documentation With MkDocs . Its aim is to give you a framework to build your project documentation using Python, MkDocs, mkdocstrings, and the Material for MkDocs theme. Eurocodepy are Python functions to work with structural eurocodes. Material data is stored in a JSON file. Current materials in the database are: urrent materials in the database are: concrete (C20 to C90) timber (C, D, GL) reinforcement (B400, B500, A400, A500) structural steel (S235, S275, S355, S450) Available european steel profiles are: IPE HEA HEB HEM L C T Pipe Box Double L Double C There are also some functions to work with material properties: creep_coef shrink_strain The existing functions are listed in the page ' Reference '. They are divided by eurocode. Table Of Contents The documentation follows the best practice for project documentation as described by Daniele Procida in the Di\u00e1taxis documentation framework and consists of four separate parts: Tutorials How-To Guides Reference Explanation License Quickly find what you're looking for depending on your use case by looking at the different pages. Projet overview ::: eurocodepy Support If you need any help you can contact the developer via email. Github: [http://github.com/pcachim/eurocodepy] Acknowledgements I want to thank my house plants for providing me with a negligible amount of oxygen each day. Also, I want to thank the sun for providing more than half of their nourishment free of charge.","title":"Home"},{"location":"#home","text":"This site contains the project documentation for the calculator project that is a toy module used in the Real Python tutorial Build Your Python Project Documentation With MkDocs . Its aim is to give you a framework to build your project documentation using Python, MkDocs, mkdocstrings, and the Material for MkDocs theme. Eurocodepy are Python functions to work with structural eurocodes. Material data is stored in a JSON file. Current materials in the database are: urrent materials in the database are: concrete (C20 to C90) timber (C, D, GL) reinforcement (B400, B500, A400, A500) structural steel (S235, S275, S355, S450) Available european steel profiles are: IPE HEA HEB HEM L C T Pipe Box Double L Double C There are also some functions to work with material properties: creep_coef shrink_strain The existing functions are listed in the page ' Reference '. They are divided by eurocode.","title":"Home"},{"location":"#table-of-contents","text":"The documentation follows the best practice for project documentation as described by Daniele Procida in the Di\u00e1taxis documentation framework and consists of four separate parts: Tutorials How-To Guides Reference Explanation License Quickly find what you're looking for depending on your use case by looking at the different pages.","title":"Table Of Contents"},{"location":"#projet-overview","text":"::: eurocodepy","title":"Projet overview"},{"location":"#support","text":"If you need any help you can contact the developer via email. Github: [http://github.com/pcachim/eurocodepy]","title":"Support"},{"location":"#acknowledgements","text":"I want to thank my house plants for providing me with a negligible amount of oxygen each day. Also, I want to thank the sun for providing more than half of their nourishment free of charge.","title":"Acknowledgements"},{"location":"copyright/","text":"Copyright (c) 2021 Paulo Cachim Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"Copyright"},{"location":"explanation/","text":"Background This part of the project documentation focuses on an understanding-oriented approach. You'll get a chance to read about the background of the project, as well as reasoning about how it was implemented. Note: Expand this section by considering the following points: Give context and background on your library Explain why you created it Provide multiple examples and approaches of how to work with it Help the reader make connections Avoid writing instructions or technical descriptions here","title":"Background"},{"location":"explanation/#background","text":"This part of the project documentation focuses on an understanding-oriented approach. You'll get a chance to read about the background of the project, as well as reasoning about how it was implemented. Note: Expand this section by considering the following points: Give context and background on your library Explain why you created it Provide multiple examples and approaches of how to work with it Help the reader make connections Avoid writing instructions or technical descriptions here","title":"Background"},{"location":"how-to-guides/","text":"This part of the project documentation focuses on a problem-oriented approach. You'll tackle common tasks that you might have, with the help of the code provided in this project. How To Add Two Numbers? You have two numbers and you need to add them together. You're in luck! The calculator package can help you get this done. Download the code from this GitHub repository and place the calculator/ folder in the same directory as your Python script: your_project/ \u2502 \u251c\u2500\u2500 calculator/ \u2502 \u251c\u2500\u2500 __init__.py \u2502 \u2514\u2500\u2500 calculations.py \u2502 \u2514\u2500\u2500 your_script.py Inside of your_script.py you can now import the add() function from the calculator.calculations module: # your_script.py from calculator.calculations import add After you've imported the function, you can use it to add any two numbers that you need to add: # your_script.py from calculator.calculations import add print(add(20, 22)) # OUTPUT: 42.0 You're now able to add any two numbers, and you'll always get a float as a result.","title":"How to guides"},{"location":"how-to-guides/#how-to-add-two-numbers","text":"You have two numbers and you need to add them together. You're in luck! The calculator package can help you get this done. Download the code from this GitHub repository and place the calculator/ folder in the same directory as your Python script: your_project/ \u2502 \u251c\u2500\u2500 calculator/ \u2502 \u251c\u2500\u2500 __init__.py \u2502 \u2514\u2500\u2500 calculations.py \u2502 \u2514\u2500\u2500 your_script.py Inside of your_script.py you can now import the add() function from the calculator.calculations module: # your_script.py from calculator.calculations import add After you've imported the function, you can use it to add any two numbers that you need to add: # your_script.py from calculator.calculations import add print(add(20, 22)) # OUTPUT: 42.0 You're now able to add any two numbers, and you'll always get a float as a result.","title":"How To Add Two Numbers?"},{"location":"reference/","text":"This part of the project documentation focuses on an information-oriented approach. Use it as a reference for the technical implementation of the calculator project code. ::: eurocodepy.ec2.uls.bend_beam ::: eurocodepy.ec2.uls.bend_shell ::: eurocodepy.ec2.uls.shear ::: eurocodepy.ec2.sls.longterm ::: eurocodepy.ec2.sls.crack","title":"Reference"},{"location":"tutorials/","text":"Tutorials This part of the project documentation focuses on a learning-oriented approach. You'll learn how to get started with the code in this project. Note: Expand this section by considering the following points: Help newcomers with getting started Teach readers about your library by making them write code Inspire confidence through examples that work for everyone, repeatably Give readers an immediate sense of achievement Show concrete examples, no abstractions Provide the minimum necessary explanation Avoid any distractions","title":"Tutorials"},{"location":"tutorials/#tutorials","text":"This part of the project documentation focuses on a learning-oriented approach. You'll learn how to get started with the code in this project. Note: Expand this section by considering the following points: Help newcomers with getting started Teach readers about your library by making them write code Inspire confidence through examples that work for everyone, repeatably Give readers an immediate sense of achievement Show concrete examples, no abstractions Provide the minimum necessary explanation Avoid any distractions","title":"Tutorials"}]}